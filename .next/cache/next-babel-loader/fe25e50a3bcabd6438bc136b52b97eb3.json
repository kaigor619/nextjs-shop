{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport styles from './Product.module.css';\n\nclass ProductAttr extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      active: this.props.data[0],\n      elems: this.props.data\n    });\n\n    _defineProperty(this, \"clickAttribute\", active => {\n      this.setState({\n        active\n      });\n      this.props.clickAttr(active);\n    });\n  }\n\n  componentDidUpdate(prev) {\n    if (prev.data !== this.props.data) {\n      this.setState({\n        elems: this.props.data\n      });\n    }\n  }\n\n  render() {\n    let {\n      elems,\n      active\n    } = this.state;\n    let attributes = elems.map(elem => {\n      let classNames = styles.btn_product_attr + ' btn btn-secondary ';\n      if (active === elem) classNames += styles.btn_active;\n      return __jsx(\"button\", {\n        onClick: () => this.clickAttribute(elem),\n        key: elem,\n        type: \"button\",\n        className: classNames\n      }, elem);\n    });\n    return __jsx(\"div\", {\n      className: styles.btn_product_group + ' btn-group',\n      role: \"group\",\n      \"aria-label\": \"Attributes\"\n    }, attributes);\n  }\n\n}\n\nexport default ProductAttr;","map":null,"metadata":{},"sourceType":"module"}