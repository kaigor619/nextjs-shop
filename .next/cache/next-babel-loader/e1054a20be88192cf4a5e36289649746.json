{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming languages\\\\Next.js\\\\re-store\\\\src\\\\components\\\\App\\\\App.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport store from '../../redux/store';\nimport { PhoneProvider } from '../../context/phone-context';\nimport PhoneService from '../../service/phone-service';\nimport Header from '../Header';\nimport Modal from '../Modal';\nconst service = new PhoneService();\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, __jsx(PhoneProvider, {\n      value: service,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }), __jsx(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }), __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst makestore = () => store;\n\nconst wrapper = createWrapper(makestore);\nexport default wrapper.withRedux(MyApp);","map":{"version":3,"sources":["D:/Programming languages/Next.js/re-store/src/components/App/App.js"],"names":["App","React","Provider","createWrapper","store","PhoneProvider","PhoneService","Header","Modal","service","MyApp","render","Component","pageProps","props","makestore","wrapper","withRedux"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,OAAO,GAAG,IAAIH,YAAJ,EAAhB;;AAEA,MAAMI,KAAN,SAAoBV,GAApB,CAAwB;AACtBW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEK,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF,CADF,CADF;AASD;;AAZqB;;AAexB,MAAME,SAAS,GAAG,MAAMX,KAAxB;;AACA,MAAMY,OAAO,GAAGb,aAAa,CAACY,SAAD,CAA7B;AAEA,eAAeC,OAAO,CAACC,SAAR,CAAkBP,KAAlB,CAAf","sourcesContent":["import App from 'next/app'\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { createWrapper } from 'next-redux-wrapper'\r\nimport store from '../../redux/store'\r\nimport { PhoneProvider } from '../../context/phone-context'\r\nimport PhoneService from '../../service/phone-service'\r\nimport Header from '../Header'\r\nimport Modal from '../Modal'\r\n\r\nconst service = new PhoneService()\r\n\r\nclass MyApp extends App {\r\n  render() {\r\n    const { Component, pageProps } = this.props\r\n    return (\r\n      <Provider store={store}>\r\n        <PhoneProvider value={service}>\r\n          <Header />\r\n          <Modal />\r\n          <Component {...pageProps}></Component>\r\n        </PhoneProvider>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nconst makestore = () => store\r\nconst wrapper = createWrapper(makestore)\r\n\r\nexport default wrapper.withRedux(MyApp)\r\n"]},"metadata":{},"sourceType":"module"}