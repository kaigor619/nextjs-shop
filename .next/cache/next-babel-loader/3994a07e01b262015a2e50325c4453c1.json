{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport styles from './product-counter.module.css';\n\nclass ProductCounter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      count: this.props.count\n    });\n\n    _defineProperty(this, \"plusClick\", () => {\n      this.setState(({\n        count\n      }) => {\n        let num = isFinite(count) ? ++count : 1;\n        this.update(num);\n        return {\n          count: num\n        };\n      });\n    });\n\n    _defineProperty(this, \"minusClick\", () => {\n      this.setState(({\n        count\n      }) => {\n        let num = 1;\n\n        if (isFinite(count)) {\n          num = count > 1 ? --count : 1;\n        }\n\n        this.update(num);\n        return {\n          count: num\n        };\n      });\n    });\n\n    _defineProperty(this, \"counterChange\", e => {\n      this.setState({\n        count: e.target.value\n      });\n      this.update(e.target.value);\n    });\n\n    _defineProperty(this, \"update\", val => {\n      this.props.changeCount(val);\n    });\n  }\n\n  render() {\n    let count = this.state.count;\n    return __jsx(\"div\", {\n      className: styles.product_counter\n    }, __jsx(\"button\", {\n      onClick: this.minusClick,\n      className: styles.btn_minus\n    }, __jsx(\"i\", {\n      className: \"fa fa-minus\"\n    })), __jsx(\"input\", {\n      onChange: this.counterChange,\n      className: styles.input_counter,\n      value: count\n    }), __jsx(\"button\", {\n      onClick: this.plusClick,\n      className: styles.btn_plus\n    }, __jsx(\"i\", {\n      className: \"fa fa-plus\"\n    })));\n  }\n\n}\n\nexport default ProductCounter;","map":null,"metadata":{},"sourceType":"module"}