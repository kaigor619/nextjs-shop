{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as Types from '../types';\nexport const initialState = {\n  count_cart: 0,\n  total_price: 0,\n  cart: [{\n    name: 'Realme C11',\n    price: 3000,\n    count: 1,\n    previewUrl: '/image/1/preview.webp',\n    gallery: ['/image/1/1.webp', '/image/1/2.webp', '/image/1/3.webp'],\n    id: 1,\n    attr: ['Black', 'Blue', 'Gold'],\n    description: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quidem eos modi adipisci cupiditate culpa distinctio porro ad sit at dolorem.'\n  }, {\n    name: 'Apple iPhone 11',\n    price: 5000,\n    count: 1,\n    previewUrl: '/image/2/preview.webp',\n    gallery: ['/image/2/1.webp', '/image/2/2.webp', '/image/2/3.webp'],\n    id: 2,\n    attr: ['Black', 'Blue', 'Gold'],\n    description: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quidem eos modi adipisci cupiditate culpa distinctio porro ad sit at dolorem.'\n  }],\n  modal: true\n};\n/**\r\n * Find cart item by id\r\n *\r\n * @param {Number} index\r\n * @param {Object} State\r\n */\n\nconst findCartItem = (id, state) => {\n  let ind = state.cart.findIndex(item => id === item.id);\n  let cartItem = state.cart[ind];\n  return [ind, cartItem];\n};\n\nconst updateCount = (id, state, newCount) => {\n  let [ind, cartItem] = findCartItem(id, state);\n\n  let updatedItem = _objectSpread(_objectSpread({}, cartItem), {}, {\n    count: newCount\n  });\n\n  let cart = [...state.cart.slice(0, ind), updatedItem, ...state.cart.slice(ind + 1)];\n  return _objectSpread(_objectSpread({}, state), {}, {\n    cart\n  });\n};\n\nconst deleteCartItem = (id, state) => {\n  let [ind, cartItem] = findCartItem(id, state);\n  let cart = [...state.cart.slice(0, ind), ...state.cart.slice(ind + 1)];\n  return _objectSpread(_objectSpread({}, state), {}, {\n    modal: true,\n    cart\n  });\n};\n\nconst addProduct = (product, state) => {\n  console.log('good');\n  let {\n    count,\n    id\n  } = product;\n  let [ind, cartItem] = findCartItem(id, state);\n  let newItem, cart;\n\n  if (ind > -1) {\n    newItem = _objectSpread(_objectSpread({}, cartItem), {}, {\n      count: count + cartItem.count\n    });\n    cart = [...state.cart.slice(0, ind), newItem, ...state.cart.slice(ind + 1)];\n  } else {\n    newItem = _objectSpread({}, product);\n    cart = [...state.cart, newItem];\n  }\n\n  return _objectSpread(_objectSpread({}, state), {}, {\n    modal: true,\n    cart\n  });\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.ADD_PRODUCT:\n      {\n        let {\n          product\n        } = action;\n        return addProduct(product, state);\n      }\n\n    case Types.CHANGE_MODAL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          modal: action.payload\n        });\n      }\n\n    case Types.UPDATE_COUNT:\n      {\n        let {\n          id,\n          count\n        } = action;\n        return updateCount(id, state, count);\n      }\n\n    case Types.DELETE_CART_ITEM:\n      {\n        return deleteCartItem(action.id, state);\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Programming languages/Next.js/re-store/src/redux/reducers/index.js"],"names":["Types","initialState","count_cart","total_price","cart","name","price","count","previewUrl","gallery","id","attr","description","modal","findCartItem","state","ind","findIndex","item","cartItem","updateCount","newCount","updatedItem","slice","deleteCartItem","addProduct","product","console","log","newItem","reducer","action","type","ADD_PRODUCT","CHANGE_MODAL","payload","UPDATE_COUNT","DELETE_CART_ITEM"],"mappings":"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","sourcesContent":["import * as Types from '../types'\r\n\r\nexport const initialState = {\r\n  count_cart: 0,\r\n  total_price: 0,\r\n  cart: [\r\n    {\r\n      name: 'Realme C11',\r\n      price: 3000,\r\n      count: 1,\r\n\r\n      previewUrl: '/image/1/preview.webp',\r\n      gallery: ['/image/1/1.webp', '/image/1/2.webp', '/image/1/3.webp'],\r\n      id: 1,\r\n      attr: ['Black', 'Blue', 'Gold'],\r\n      description:\r\n        'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quidem eos modi adipisci cupiditate culpa distinctio porro ad sit at dolorem.',\r\n    },\r\n    {\r\n      name: 'Apple iPhone 11',\r\n      price: 5000,\r\n      count: 1,\r\n      previewUrl: '/image/2/preview.webp',\r\n      gallery: ['/image/2/1.webp', '/image/2/2.webp', '/image/2/3.webp'],\r\n      id: 2,\r\n      attr: ['Black', 'Blue', 'Gold'],\r\n      description:\r\n        'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quidem eos modi adipisci cupiditate culpa distinctio porro ad sit at dolorem.',\r\n    },\r\n  ],\r\n  modal: true,\r\n}\r\n\r\n/**\r\n * Find cart item by id\r\n *\r\n * @param {Number} index\r\n * @param {Object} State\r\n */\r\nconst findCartItem = (id, state) => {\r\n  let ind = state.cart.findIndex((item) => id === item.id)\r\n  let cartItem = state.cart[ind]\r\n  return [ind, cartItem]\r\n}\r\n\r\nconst updateCount = (id, state, newCount) => {\r\n  let [ind, cartItem] = findCartItem(id, state)\r\n\r\n  let updatedItem = {\r\n    ...cartItem,\r\n    count: newCount,\r\n  }\r\n\r\n  let cart = [\r\n    ...state.cart.slice(0, ind),\r\n    updatedItem,\r\n    ...state.cart.slice(ind + 1),\r\n  ]\r\n\r\n  return {\r\n    ...state,\r\n    cart,\r\n  }\r\n}\r\n\r\nconst deleteCartItem = (id, state) => {\r\n  let [ind, cartItem] = findCartItem(id, state)\r\n\r\n  let cart = [...state.cart.slice(0, ind), ...state.cart.slice(ind + 1)]\r\n\r\n  return {\r\n    ...state,\r\n    modal: true,\r\n    cart,\r\n  }\r\n}\r\n\r\nconst addProduct = (product, state) => {\r\n  console.log('good')\r\n  let { count, id } = product\r\n\r\n  let [ind, cartItem] = findCartItem(id, state)\r\n\r\n  let newItem, cart\r\n\r\n  if (ind > -1) {\r\n    newItem = {\r\n      ...cartItem,\r\n      count: count + cartItem.count,\r\n    }\r\n    cart = [...state.cart.slice(0, ind), newItem, ...state.cart.slice(ind + 1)]\r\n  } else {\r\n    newItem = {\r\n      ...product,\r\n    }\r\n    cart = [...state.cart, newItem]\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    modal: true,\r\n    cart,\r\n  }\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.ADD_PRODUCT: {\r\n      let { product } = action\r\n      return addProduct(product, state)\r\n    }\r\n    case Types.CHANGE_MODAL: {\r\n      return { ...state, modal: action.payload }\r\n    }\r\n\r\n    case Types.UPDATE_COUNT: {\r\n      let { id, count } = action\r\n      return updateCount(id, state, count)\r\n    }\r\n\r\n    case Types.DELETE_CART_ITEM: {\r\n      return deleteCartItem(action.id, state)\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}