{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ProductCounter from '../../components/ProductCounter';\nimport ProductAttr from './Attributes';\nimport { addProduct } from '../../redux/actions';\nimport styles from './Product.module.css';\n\nconst ProductDescription = ({\n  product,\n  addProduct,\n  in_cart\n}) => {\n  let {\n    name,\n    price,\n    description,\n    attr\n  } = product;\n  let {\n    0: error,\n    1: setError\n  } = useState('');\n  let {\n    0: count,\n    1: setCount\n  } = useState(1);\n  let {\n    0: attribute,\n    1: setAttribute\n  } = useState(attr[0]);\n\n  const clickAttr = attr => {\n    setAttribute(attr);\n  };\n\n  const changeCount = num => {\n    setCount(+parseInt(num));\n  };\n\n  const addCart = () => {\n    let message = '';\n\n    if (count >= 1 && isFinite(count) && attribute !== '') {\n      let obj = Object.assign(product, {\n        count\n      });\n      addProduct(obj);\n    } else if (count < 1 || !isFinite(count)) {\n      message = 'Неверное количество товара';\n    } else if (attribute === '') {\n      message = 'Выберете атрибут';\n    }\n\n    if (error !== message) setError(message);\n  };\n\n  let classNames = styles.btn_add_product + ' btn btn-primary ';\n  if (in_cart) classNames += styles.in_cart;\n  return __jsx(\"div\", {\n    className: styles.product_description\n  }, __jsx(\"h2\", {\n    className: styles.product_name\n  }, name), __jsx(\"span\", {\n    className: styles.product_price\n  }, \"$\", price), __jsx(\"p\", {\n    className: \"product_about\"\n  }, description), __jsx(ProductAttr, {\n    data: attr,\n    clickAttr: clickAttr\n  }), __jsx(ProductCounter, {\n    changeCount: changeCount,\n    count: 1\n  }), __jsx(\"div\", {\n    className: \"product_add_cart\"\n  }, __jsx(\"button\", {\n    onClick: addCart,\n    type: \"button\",\n    className: classNames\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart mr-1\",\n    \"aria-hidden\": \"true\"\n  }), ' ', __jsx(\"span\", null, \"Add to Cart\"))), __jsx(\"p\", {\n    className: styles.error_message\n  }, error));\n};\n\nconst mapStateToProps = ({\n  cart\n}, {\n  product\n}) => {\n  let in_cart = cart.some(item => product.id === item.id);\n  return {\n    in_cart\n  };\n};\n\nconst mapDispatchToProps = {\n  addProduct\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDescription);","map":null,"metadata":{},"sourceType":"module"}