{"ast":null,"code":"import React, { Component } from 'react';\nimport Description from '../../../routes/product/description';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Spinner from '../../../components/spinner';\nimport Error from '../../../components/error';\nimport { withRouter } from 'next/router';\nimport styles from '../../../routes/product/product.module.css';\nimport prevArrow from '../../../routes/product/prev.svg';\nimport nextArrow from '../../../routes/product/next.svg';\n\nconst ProductContainer = () => {};\n\n_c = ProductContainer;\n\nProductContainer.getInitialProps = async ({\n  req,\n  query\n}) => {\n  let {\n    id\n  } = query;\n  let serverProduct = null;\n\n  if (!req) {\n    return {\n      serverProduct\n    };\n  }\n\n  try {\n    const res = await fetch(`http://localhost:4000/phones/${id}`);\n    serverProduct = await res.json();\n  } catch (error) {\n    return {\n      error\n    };\n  }\n\n  return {\n    serverProduct\n  };\n}; // class ProductContainer extends Component {\n// static async getInitialProps({ req, query }) {\n//   let { id } = query\n//   let serverProduct = null\n//   if (!req) {\n//     return { serverProduct }\n//   }\n//   try {\n//     const res = await fetch(`http://localhost:4000/phones/${id}`)\n//     serverProduct = await res.json()\n//   } catch (error) {\n//     return { error }\n//   }\n//   return { serverProduct }\n// }\n//   async load() {\n//     let { query } = this.props.router\n//     let res = await fetch(`http://localhost:4000/phones/${query.id}`)\n//     let product = await res.json()\n//     this.setState({ product, loading: false })\n//   }\n//   state = {\n//     error: this.props.error,\n//     loading: !this.props.serverProduct,\n//     product: this.props.serverProduct,\n//   }\n//   componentDidMount() {\n//     if (!this.state.product) {\n//       this.load()\n//       // this.setState({ phones: this.load() })\n//     }\n//   }\n//   carouselProps = {\n//     indicators: false,\n//     prevIcon: <img className={styles.carousel_arrows} src={prevArrow} />,\n//     nextIcon: <img className={styles.carousel_arrows} src={nextArrow} />,\n//   }\n//   render() {\n//     let { loading, error, product } = this.state\n//     if (error) {\n//       return <Error />\n//     }\n//     let CarouselComponents = <Spinner />\n//     if (!loading)\n//       CarouselComponents = (\n//         <Carousel {...this.carouselProps}>\n//           {product.gallery.map((item) => {\n//             return (\n//               <Carousel.Item key={item}>\n//                 {<img className=\"gallery-image\" src={item} alt=\"Gallery\" />}\n//               </Carousel.Item>\n//             )\n//           })}\n//         </Carousel>\n//       )\n//     return (\n//       <div className={styles.single_page}>\n//         <div className=\"container\">\n//           <div className=\"row\">\n//             <div className=\"col-md-6\">\n//               <div className={styles.product_ceil}>{CarouselComponents}</div>\n//             </div>\n//             <div className=\"col-md-6\">\n//               {loading ? (\n//                 <Spinner />\n//               ) : (\n//                 <Description product={product} history={this.props.history} />\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n\nexport default _c2 = withRouter(ProductContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/Programming languages/React/re-store/pages/shop/product/[id].js"],"names":["React","Component","Description","Carousel","Spinner","Error","withRouter","styles","prevArrow","nextArrow","ProductContainer","getInitialProps","req","query","id","serverProduct","res","fetch","json","error"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM,CAAE,CAAjC;;KAAMA,gB;;AAENA,gBAAgB,CAACC,eAAjB,GAAmC,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA0B;AAC3D,MAAI;AAAEC,IAAAA;AAAF,MAASD,KAAb;AACA,MAAIE,aAAa,GAAG,IAApB;;AACA,MAAI,CAACH,GAAL,EAAU;AACR,WAAO;AAAEG,MAAAA;AAAF,KAAP;AACD;;AACD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,gCAA+BH,EAAG,EAApC,CAAvB;AACAC,IAAAA,aAAa,GAAG,MAAMC,GAAG,CAACE,IAAJ,EAAtB;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AAED,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACD,CAdD,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,qBAAeT,UAAU,CAACI,gBAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport Description from '../../../routes/product/description'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Spinner from '../../../components/spinner'\r\nimport Error from '../../../components/error'\r\nimport { withRouter } from 'next/router'\r\nimport styles from '../../../routes/product/product.module.css'\r\nimport prevArrow from '../../../routes/product/prev.svg'\r\nimport nextArrow from '../../../routes/product/next.svg'\r\n\r\nconst ProductContainer = () => {}\r\n\r\nProductContainer.getInitialProps = async ({ req, query }) => {\r\n  let { id } = query\r\n  let serverProduct = null\r\n  if (!req) {\r\n    return { serverProduct }\r\n  }\r\n  try {\r\n    const res = await fetch(`http://localhost:4000/phones/${id}`)\r\n    serverProduct = await res.json()\r\n  } catch (error) {\r\n    return { error }\r\n  }\r\n\r\n  return { serverProduct }\r\n}\r\n\r\n// class ProductContainer extends Component {\r\n// static async getInitialProps({ req, query }) {\r\n//   let { id } = query\r\n//   let serverProduct = null\r\n//   if (!req) {\r\n//     return { serverProduct }\r\n//   }\r\n\r\n//   try {\r\n//     const res = await fetch(`http://localhost:4000/phones/${id}`)\r\n//     serverProduct = await res.json()\r\n//   } catch (error) {\r\n//     return { error }\r\n//   }\r\n\r\n//   return { serverProduct }\r\n// }\r\n\r\n//   async load() {\r\n//     let { query } = this.props.router\r\n//     let res = await fetch(`http://localhost:4000/phones/${query.id}`)\r\n//     let product = await res.json()\r\n\r\n//     this.setState({ product, loading: false })\r\n//   }\r\n\r\n//   state = {\r\n//     error: this.props.error,\r\n//     loading: !this.props.serverProduct,\r\n//     product: this.props.serverProduct,\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     if (!this.state.product) {\r\n//       this.load()\r\n//       // this.setState({ phones: this.load() })\r\n//     }\r\n//   }\r\n\r\n//   carouselProps = {\r\n//     indicators: false,\r\n//     prevIcon: <img className={styles.carousel_arrows} src={prevArrow} />,\r\n//     nextIcon: <img className={styles.carousel_arrows} src={nextArrow} />,\r\n//   }\r\n\r\n//   render() {\r\n//     let { loading, error, product } = this.state\r\n\r\n//     if (error) {\r\n//       return <Error />\r\n//     }\r\n\r\n//     let CarouselComponents = <Spinner />\r\n//     if (!loading)\r\n//       CarouselComponents = (\r\n//         <Carousel {...this.carouselProps}>\r\n//           {product.gallery.map((item) => {\r\n//             return (\r\n//               <Carousel.Item key={item}>\r\n//                 {<img className=\"gallery-image\" src={item} alt=\"Gallery\" />}\r\n//               </Carousel.Item>\r\n//             )\r\n//           })}\r\n//         </Carousel>\r\n//       )\r\n\r\n//     return (\r\n//       <div className={styles.single_page}>\r\n//         <div className=\"container\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col-md-6\">\r\n//               <div className={styles.product_ceil}>{CarouselComponents}</div>\r\n//             </div>\r\n//             <div className=\"col-md-6\">\r\n//               {loading ? (\r\n//                 <Spinner />\r\n//               ) : (\r\n//                 <Description product={product} history={this.props.history} />\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default withRouter(ProductContainer)\r\n"]},"metadata":{},"sourceType":"module"}