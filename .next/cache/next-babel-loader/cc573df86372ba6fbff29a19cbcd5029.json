{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming languages\\\\React\\\\re-store\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Card from '../routes/shop/card';\nimport { connect } from 'react-redux';\nimport { withDataPhone } from '../components/hoc';\nimport { phoneLoaded, addLoading, addError } from '../redux/actions';\nimport Spinner from '../components/spinner';\nimport Error from '../components/error';\nimport styles from '../routes/shop/shop.module.css';\n\nconst Shop = ({\n  phones\n}) => {\n  let list = phones.map(item => {\n    return __jsx(Card, _extends({}, item, {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }));\n  });\n  return __jsx(\"div\", {\n    className: styles.shop_content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, list)));\n};\n\nclass ShopContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: true,\n      phones: [],\n      error: false\n    });\n\n    _defineProperty(this, \"render\", () => {\n      let {\n        phones,\n        loading,\n        error\n      } = this.state;\n\n      if (error) {\n        return __jsx(Error, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (loading) {\n        return __jsx(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return __jsx(Shop, {\n        phones: phones,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }\n      });\n    });\n  }\n\n  componentDidMount() {\n    let {\n      phoneservice\n    } = this.props;\n    phoneservice.getPhones().then(phones => {\n      this.setState({\n        loading: false,\n        phones\n      });\n    }).catch(error => {\n      this.setState({\n        error,\n        loading: false\n      });\n    });\n  }\n\n}\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('https://.../posts');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default withDataPhone()(ShopContainer);","map":{"version":3,"sources":["D:/Programming languages/React/re-store/pages/index.js"],"names":["React","Component","Card","connect","withDataPhone","phoneLoaded","addLoading","addError","Spinner","Error","styles","Shop","phones","list","map","item","id","shop_content","ShopContainer","loading","error","state","componentDidMount","phoneservice","props","getPhones","then","setState","catch","getStaticProps","res","fetch","posts","json"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,QAAlC,QAAkD,kBAAlD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC3B,MAAIC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AAC9B,WAAO,MAAC,IAAD,eAAUA,IAAV;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFU,CAAX;AAGA,SACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBJ,IAAtB,CADF,CADF,CADF;AAOD,CAXD;;AAaA,MAAMK,aAAN,SAA4BjB,SAA5B,CAAsC;AAAA;AAAA;;AAAA,mCAC5B;AACNkB,MAAAA,OAAO,EAAE,IADH;AAENP,MAAAA,MAAM,EAAE,EAFF;AAGNQ,MAAAA,KAAK,EAAE;AAHD,KAD4B;;AAAA,oCAmB3B,MAAM;AACb,UAAI;AAAER,QAAAA,MAAF;AAAUO,QAAAA,OAAV;AAAmBC,QAAAA;AAAnB,UAA6B,KAAKC,KAAtC;;AAEA,UAAID,KAAJ,EAAW;AACT,eAAO,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAID,OAAJ,EAAa;AACX,eAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aAAO,MAAC,IAAD;AAAM,QAAA,MAAM,EAAEP,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KA9BmC;AAAA;;AAOpCU,EAAAA,iBAAiB,GAAG;AAClB,QAAI;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA5B;AACAD,IAAAA,YAAY,CACTE,SADH,GAEGC,IAFH,CAESd,MAAD,IAAY;AAChB,WAAKe,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE,KAAX;AAAkBP,QAAAA;AAAlB,OAAd;AACD,KAJH,EAKGgB,KALH,CAKUR,KAAD,IAAW;AAChB,WAAKO,QAAL,CAAc;AAAEP,QAAAA,KAAF;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAAd;AACD,KAPH;AAQD;;AAjBmC;;AAiCtC,OAAO,eAAeU,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAD,CAAvB;AACA,QAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB,CAJqC,CAMrC;AACA;;AACA,SAAO;AACLT,IAAAA,KAAK,EAAE;AACLQ,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAe5B,aAAa,GAAGc,aAAH,CAA5B","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from '../routes/shop/card'\r\nimport { connect } from 'react-redux'\r\nimport { withDataPhone } from '../components/hoc'\r\nimport { phoneLoaded, addLoading, addError } from '../redux/actions'\r\nimport Spinner from '../components/spinner'\r\nimport Error from '../components/error'\r\nimport styles from '../routes/shop/shop.module.css'\r\n\r\nconst Shop = ({ phones }) => {\r\n  let list = phones.map((item) => {\r\n    return <Card {...item} key={item.id} />\r\n  })\r\n  return (\r\n    <div className={styles.shop_content}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">{list}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass ShopContainer extends Component {\r\n  state = {\r\n    loading: true,\r\n    phones: [],\r\n    error: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { phoneservice } = this.props\r\n    phoneservice\r\n      .getPhones()\r\n      .then((phones) => {\r\n        this.setState({ loading: false, phones })\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error, loading: false })\r\n      })\r\n  }\r\n\r\n  render = () => {\r\n    let { phones, loading, error } = this.state\r\n\r\n    if (error) {\r\n      return <Error />\r\n    }\r\n    if (loading) {\r\n      return <Spinner />\r\n    }\r\n\r\n    return <Shop phones={phones} />\r\n  }\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n  const res = await fetch('https://.../posts')\r\n  const posts = await res.json()\r\n\r\n  // By returning { props: posts }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  }\r\n}\r\n\r\nexport default withDataPhone()(ShopContainer)\r\n"]},"metadata":{},"sourceType":"module"}