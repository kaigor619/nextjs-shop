{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming languages\\\\Next.js\\\\re-store\\\\src\\\\pages\\\\product\\\\Product.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { useRouter } from 'next/router';\nimport Description from './Description';\nimport Spinner from '../../components/Spinner';\nimport Error from '../../components/Spinner';\nimport Modal from './Modal';\nimport styles from './Product.module.css';\nimport prevArrow from './images/prev.svg';\nimport nextArrow from './images/next.svg';\nconst carouselProps = {\n  indicators: false,\n  prevIcon: __jsx(\"img\", {\n    className: styles.carousel_arrows,\n    src: prevArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }),\n  nextIcon: __jsx(\"img\", {\n    className: styles.carousel_arrows,\n    src: nextArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  })\n};\n\nconst ProductContainer = ({\n  serverProduct,\n  serverError\n}) => {\n  let {\n    0: product,\n    1: setProduct\n  } = useState(serverProduct);\n  let {\n    0: loading,\n    1: setLoading\n  } = useState(!serverProduct);\n  let {\n    0: error,\n    1: setError\n  } = useState(serverError);\n  let router = useRouter();\n\n  async function load() {\n    let {\n      query\n    } = router;\n\n    try {\n      let res = await fetch(`http://localhost:4000/phones/${query.id}`);\n      let product = await res.json();\n      setProduct(product);\n      setLoading(false);\n    } catch (err) {\n      setError(err);\n    }\n  }\n\n  useEffect(() => {\n    if (!product) {\n      load();\n    }\n  });\n\n  if (error) {\n    return __jsx(Error, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    });\n  }\n\n  let CarouselComponents = __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }\n  });\n\n  if (!loading) CarouselComponents = __jsx(Carousel, _extends({}, carouselProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), product.gallery.map(item => {\n    return __jsx(Carousel.Item, {\n      key: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: styles.carousel_wrap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      className: styles.gallery_image,\n      src: item,\n      alt: \"Gallery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    })));\n  }));\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: styles.single_page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: styles.product_ceil,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, CarouselComponents)), __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, loading ? __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 26\n    }\n  }) : __jsx(Description, {\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 40\n    }\n  }))))), __jsx(Modal, {\n    show: true,\n    onHide: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n};\n\nProductContainer.getInitialProps = async ({\n  req,\n  query\n}) => {\n  let {\n    id\n  } = query;\n  let serverProduct = null;\n\n  if (!req) {\n    return {\n      serverProduct\n    };\n  }\n\n  try {\n    const res = await fetch(`http://localhost:4000/phones/${id}`);\n    serverProduct = await res.json();\n  } catch (error) {\n    return {\n      serverError\n    };\n  }\n\n  return {\n    serverProduct\n  };\n};\n\nexport default ProductContainer;","map":{"version":3,"sources":["D:/Programming languages/Next.js/re-store/src/pages/product/Product.js"],"names":["React","useState","useEffect","Carousel","useRouter","Description","Spinner","Error","Modal","styles","prevArrow","nextArrow","carouselProps","indicators","prevIcon","carousel_arrows","nextIcon","ProductContainer","serverProduct","serverError","product","setProduct","loading","setLoading","error","setError","router","load","query","res","fetch","id","json","err","CarouselComponents","gallery","map","item","carousel_wrap","gallery_image","single_page","product_ceil","getInitialProps","req"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport { useRouter } from 'next/router'\r\nimport Description from './Description'\r\nimport Spinner from '../../components/Spinner'\r\nimport Error from '../../components/Spinner'\r\nimport Modal from './Modal'\r\nimport styles from './Product.module.css'\r\nimport prevArrow from './images/prev.svg'\r\nimport nextArrow from './images/next.svg'\r\n\r\nconst carouselProps = {\r\n  indicators: false,\r\n  prevIcon: <img className={styles.carousel_arrows} src={prevArrow} />,\r\n  nextIcon: <img className={styles.carousel_arrows} src={nextArrow} />,\r\n}\r\n\r\nconst ProductContainer = ({ serverProduct, serverError }) => {\r\n  let [product, setProduct] = useState(serverProduct)\r\n  let [loading, setLoading] = useState(!serverProduct)\r\n  let [error, setError] = useState(serverError)\r\n\r\n  let router = useRouter()\r\n\r\n  async function load() {\r\n    let { query } = router\r\n\r\n    try {\r\n      let res = await fetch(`http://localhost:4000/phones/${query.id}`)\r\n      let product = await res.json()\r\n      setProduct(product)\r\n      setLoading(false)\r\n    } catch (err) {\r\n      setError(err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!product) {\r\n      load()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return <Error />\r\n  }\r\n\r\n  let CarouselComponents = <Spinner />\r\n  if (!loading)\r\n    CarouselComponents = (\r\n      <Carousel {...carouselProps}>\r\n        {product.gallery.map((item) => {\r\n          return (\r\n            <Carousel.Item key={item}>\r\n              <div className={styles.carousel_wrap}>\r\n                {\r\n                  <img\r\n                    className={styles.gallery_image}\r\n                    src={item}\r\n                    alt=\"Gallery\"\r\n                  />\r\n                }\r\n              </div>\r\n            </Carousel.Item>\r\n          )\r\n        })}\r\n      </Carousel>\r\n    )\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.single_page}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className={styles.product_ceil}>{CarouselComponents}</div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              {loading ? <Spinner /> : <Description product={product} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal show={true} onHide={() => {}} />\r\n    </>\r\n  )\r\n}\r\n\r\nProductContainer.getInitialProps = async ({ req, query }) => {\r\n  let { id } = query\r\n  let serverProduct = null\r\n  if (!req) {\r\n    return { serverProduct }\r\n  }\r\n  try {\r\n    const res = await fetch(`http://localhost:4000/phones/${id}`)\r\n    serverProduct = await res.json()\r\n  } catch (error) {\r\n    return { serverError }\r\n  }\r\n\r\n  return { serverProduct }\r\n}\r\n\r\nexport default ProductContainer\r\n"]},"metadata":{},"sourceType":"module"}