{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { Modal, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport * as Action from '../../redux/actions';\nimport CartItem from './CartItem';\nimport CartEmpty from './CartEmpty';\nimport back from './back.svg';\nimport close from './close.svg';\n\nvar ButtonCheckout = function ButtonCheckout() {\n  return __jsx(Button, {\n    variant: \"primary\",\n    className: \"btn_checkout ml-sm-3 ml-0\"\n  }, \"Checkout\", __jsx(\"i\", {\n    className: \"fa checkout_icon fa-credit-card-alt\",\n    \"aria-hidden\": \"true\"\n  }));\n};\n\nvar ContinueShopping = function ContinueShopping(_ref) {\n  var changeModal = _ref.changeModal;\n  return __jsx(\"a\", {\n    href: \"#\",\n    className: \"back_shopping text-decoration-none\",\n    onClick: function onClick() {\n      return changeModal(false);\n    }\n  }, __jsx(\"img\", {\n    src: back,\n    className: \"back_shopping_icon\",\n    alt: \"\"\n  }), \" Continue shopping\");\n};\n\nvar ModalHeader = function ModalHeader(_ref2) {\n  var changeModal = _ref2.changeModal;\n  return __jsx(\"div\", {\n    className: \"modal_header\"\n  }, __jsx(\"h3\", null, \"Cart\"), __jsx(\"div\", {\n    onClick: function onClick() {\n      return changeModal(false);\n    },\n    className: \"close_modal\"\n  }, __jsx(\"img\", {\n    src: close,\n    className: \"close_icon\",\n    alt: \"\"\n  })));\n};\n\nvar ModalBody = function ModalBody(_ref3) {\n  var cart = _ref3.cart,\n      changeModal = _ref3.changeModal,\n      deleteCartItem = _ref3.deleteCartItem,\n      changeCount = _ref3.changeCount;\n  if (cart.length == 0) return __jsx(CartEmpty, null);\n  var cart_items = cart.map(function (item) {\n    return __jsx(CartItem, {\n      key: item.name + item.id,\n      product: item,\n      removeProduct: deleteCartItem,\n      changeCount: changeCount,\n      changeModal: changeModal\n    });\n  });\n  return __jsx(\"div\", {\n    className: \"modal_body\"\n  }, cart_items);\n};\n\nvar ModalFooter = function ModalFooter(_ref4) {\n  var cart = _ref4.cart,\n      changeModal = _ref4.changeModal;\n  var total_price = cart.reduce(function (previousValue, _ref5) {\n    var price = _ref5.price,\n        count = _ref5.count;\n    return previousValue + +price * +count;\n  }, 0);\n  return __jsx(\"div\", {\n    className: \"modal_footer d-flex align-items-center justify-content-between\"\n  }, __jsx(ContinueShopping, {\n    changeModal: changeModal\n  }), __jsx(\"div\", {\n    className: \"wrap_total_checkout d-flex align-items-sm-center flex-sm-row flex-column\"\n  }, __jsx(\"div\", {\n    className: \"total\"\n  }, __jsx(\"span\", null, \"Total:\"), ' ', __jsx(\"span\", {\n    className: \"total_price\"\n  }, total_price, \"$\")), cart.length > 0 && __jsx(ButtonCheckout, null)));\n};\n\nvar VerticalModal = function VerticalModal(_ref6) {\n  var modal = _ref6.modal,\n      cart = _ref6.cart,\n      changeModal = _ref6.changeModal,\n      deleteCartItem = _ref6.deleteCartItem,\n      changeCount = _ref6.changeCount;\n  if (!modal) return null;\n  var propsBody = {\n    changeModal: changeModal,\n    deleteCartItem: deleteCartItem,\n    changeCount: changeCount\n  };\n  return __jsx(Modal, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    show: modal,\n    onHide: function onHide() {\n      return changeModal(false);\n    }\n  }, __jsx(ModalHeader, {\n    changeModal: changeModal\n  }), __jsx(ModalBody, _extends({\n    cart: cart\n  }, propsBody)), __jsx(ModalFooter, {\n    cart: cart,\n    changeModal: changeModal\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(_ref7) {\n  var modal = _ref7.modal,\n      cart = _ref7.cart;\n  if (!modal) return {\n    modal: modal\n  };\n  return {\n    modal: modal,\n    cart: cart\n  };\n};\n\nvar mapDispatchToProps = {\n  changeModal: Action.changeModal,\n  deleteCartItem: Action.deleteCart,\n  changeCount: Action.changeCountById\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(VerticalModal);","map":null,"metadata":{},"sourceType":"module"}