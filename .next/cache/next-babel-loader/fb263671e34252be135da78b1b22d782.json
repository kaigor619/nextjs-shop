{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming languages\\\\React\\\\re-store\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Card from '../routes/shop/card';\nimport { connect } from 'react-redux';\nimport { withDataPhone } from '../components/hoc';\nimport { phoneLoaded, addLoading, addError } from '../redux/actions';\nimport Spinner from '../components/spinner';\nimport Error from '../components/error';\nimport styles from '../routes/shop/shop.module.css';\n\nconst Shop = ({\n  phones\n}) => {\n  let list = phones.map(item => {\n    return __jsx(Card, _extends({}, item, {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }));\n  });\n  return __jsx(\"div\", {\n    className: styles.shop_content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, list)));\n}; // class ShopContainer extends Component {\n//   state = {\n//     loading: true,\n//     phones: [],\n//     error: false,\n//   }\n//   componentDidMount() {\n//     let { phoneservice } = this.props\n//     phoneservice\n//       .getPhones()\n//       .then((phones) => {\n//         this.setState({ loading: false, phones })\n//       })\n//       .catch((error) => {\n//         this.setState({ error, loading: false })\n//       })\n//   }\n//   render = () => {\n//     let { phones, loading, error } = this.state\n//     if (error) {\n//       return <Error />\n//     }\n//     if (loading) {\n//       return <Spinner />\n//     }\n//     return <Shop phones={phones} />\n//   }\n// }\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('http://localhost:4000/phones');\n  const phones = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      phones\n    }\n  };\n}\nexport default Shop;","map":{"version":3,"sources":["D:/Programming languages/React/re-store/pages/index.js"],"names":["React","Component","Card","connect","withDataPhone","phoneLoaded","addLoading","addError","Spinner","Error","styles","Shop","phones","list","map","item","id","shop_content","getStaticProps","res","fetch","json","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,QAAlC,QAAkD,kBAAlD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC3B,MAAIC,IAAI,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AAC9B,WAAO,MAAC,IAAD,eAAUA,IAAV;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFU,CAAX;AAGA,SACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBJ,IAAtB,CADF,CADF,CADF;AAOD,CAXD,C,CAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,OAAO,eAAeK,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAvB;AACA,QAAMR,MAAM,GAAG,MAAMO,GAAG,CAACE,IAAJ,EAArB,CAJqC,CAMrC;AACA;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLV,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from '../routes/shop/card'\r\nimport { connect } from 'react-redux'\r\nimport { withDataPhone } from '../components/hoc'\r\nimport { phoneLoaded, addLoading, addError } from '../redux/actions'\r\nimport Spinner from '../components/spinner'\r\nimport Error from '../components/error'\r\nimport styles from '../routes/shop/shop.module.css'\r\n\r\nconst Shop = ({ phones }) => {\r\n  let list = phones.map((item) => {\r\n    return <Card {...item} key={item.id} />\r\n  })\r\n  return (\r\n    <div className={styles.shop_content}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">{list}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// class ShopContainer extends Component {\r\n//   state = {\r\n//     loading: true,\r\n//     phones: [],\r\n//     error: false,\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     let { phoneservice } = this.props\r\n//     phoneservice\r\n//       .getPhones()\r\n//       .then((phones) => {\r\n//         this.setState({ loading: false, phones })\r\n//       })\r\n//       .catch((error) => {\r\n//         this.setState({ error, loading: false })\r\n//       })\r\n//   }\r\n\r\n//   render = () => {\r\n//     let { phones, loading, error } = this.state\r\n\r\n//     if (error) {\r\n//       return <Error />\r\n//     }\r\n//     if (loading) {\r\n//       return <Spinner />\r\n//     }\r\n\r\n//     return <Shop phones={phones} />\r\n//   }\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n  const res = await fetch('http://localhost:4000/phones')\r\n  const phones = await res.json()\r\n\r\n  // By returning { props: posts }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      phones,\r\n    },\r\n  }\r\n}\r\n\r\nexport default Shop\r\n"]},"metadata":{},"sourceType":"module"}