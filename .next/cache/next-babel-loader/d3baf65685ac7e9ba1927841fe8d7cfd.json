{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { Modal, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport * as Action from '../../redux/actions';\nimport CartItem from './CartItem';\nimport CartEmpty from './CartEmpty';\nimport back from './back.svg';\nimport close from './close.svg';\n\nconst ButtonCheckout = () => {\n  return __jsx(Button, {\n    variant: \"primary\",\n    className: \"btn_checkout ml-sm-3 ml-0\"\n  }, \"Checkout\", __jsx(\"i\", {\n    className: \"fa checkout_icon fa-credit-card-alt\",\n    \"aria-hidden\": \"true\"\n  }));\n};\n\nconst ContinueShopping = ({\n  changeModal\n}) => {\n  return __jsx(\"a\", {\n    href: \"#\",\n    className: \"back_shopping text-decoration-none\",\n    onClick: () => changeModal(false)\n  }, __jsx(\"img\", {\n    src: back,\n    className: \"back_shopping_icon\",\n    alt: \"\"\n  }), \" Continue shopping\");\n};\n\nconst ModalHeader = ({\n  changeModal\n}) => {\n  return __jsx(\"div\", {\n    className: \"modal_header\"\n  }, __jsx(\"h3\", null, \"Cart\"), __jsx(\"div\", {\n    onClick: () => changeModal(false),\n    className: \"close_modal\"\n  }, __jsx(\"img\", {\n    src: close,\n    className: \"close_icon\",\n    alt: \"\"\n  })));\n};\n\nconst ModalBody = ({\n  cart,\n  changeModal,\n  deleteCartItem,\n  changeCount\n}) => {\n  if (cart.length == 0) return __jsx(CartEmpty, null);\n  let cart_items = cart.map(item => {\n    return __jsx(CartItem, {\n      key: item.name + item.id,\n      product: item,\n      removeProduct: deleteCartItem,\n      changeCount: changeCount,\n      changeModal: changeModal\n    });\n  });\n  return __jsx(\"div\", {\n    className: \"modal_body\"\n  }, cart_items);\n};\n\nconst ModalFooter = ({\n  cart,\n  changeModal\n}) => {\n  let total_price = cart.reduce((previousValue, {\n    price,\n    count\n  }) => {\n    return previousValue + +price * +count;\n  }, 0);\n  return __jsx(\"div\", {\n    className: \"modal_footer d-flex align-items-center justify-content-between\"\n  }, __jsx(ContinueShopping, {\n    changeModal: changeModal\n  }), __jsx(\"div\", {\n    className: \"wrap_total_checkout d-flex align-items-sm-center flex-sm-row flex-column\"\n  }, __jsx(\"div\", {\n    className: \"total\"\n  }, __jsx(\"span\", null, \"Total:\"), ' ', __jsx(\"span\", {\n    className: \"total_price\"\n  }, total_price, \"$\")), cart.length > 0 && __jsx(ButtonCheckout, null)));\n};\n\nconst VerticalModal = ({\n  modal,\n  cart,\n  changeModal,\n  deleteCartItem,\n  changeCount\n}) => {\n  if (!modal) return null;\n  let propsBody = {\n    changeModal,\n    deleteCartItem,\n    changeCount\n  };\n  return __jsx(Modal, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    show: modal,\n    onHide: () => changeModal(false)\n  }, __jsx(ModalHeader, {\n    changeModal: changeModal\n  }), __jsx(ModalBody, _extends({\n    cart: cart\n  }, propsBody)), __jsx(ModalFooter, {\n    cart: cart,\n    changeModal: changeModal\n  }));\n};\n\nconst mapStateToProps = ({\n  modal,\n  cart\n}) => {\n  if (!modal) return {\n    modal\n  };\n  return {\n    modal,\n    cart\n  };\n};\n\nconst mapDispatchToProps = {\n  changeModal: Action.changeModal,\n  deleteCartItem: Action.deleteCart,\n  changeCount: Action.changeCountById\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(VerticalModal);","map":null,"metadata":{},"sourceType":"module"}