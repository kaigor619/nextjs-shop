{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"D:\\\\Programming languages\\\\React\\\\re-store\\\\pages\\\\shop\\\\product\\\\[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component, useState, useEffect } from 'react';\nimport Description from '../../../routes/product/description';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Spinner from '../../../components/spinner';\nimport Error from '../../../components/error';\nimport { useRouter } from 'next/router';\nimport styles from '../../../routes/product/product.module.css';\nimport prevArrow from '../../../routes/product/prev.svg';\nimport nextArrow from '../../../routes/product/next.svg';\nconst carouselProps = {\n  indicators: false,\n  prevIcon: __jsx(\"img\", {\n    className: styles.carousel_arrows,\n    src: prevArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }),\n  nextIcon: __jsx(\"img\", {\n    className: styles.carousel_arrows,\n    src: nextArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  })\n};\n\nconst ProductContainer = ({\n  serverProduct,\n  serverError\n}) => {\n  _s();\n\n  let {\n    0: product,\n    1: setProduct\n  } = useState(serverProduct);\n  let {\n    0: loading,\n    1: setLoading\n  } = useState(!serverProduct);\n  let {\n    0: error,\n    1: setError\n  } = useState(serverError);\n  let router = useRouter();\n\n  async function load() {\n    let {\n      query\n    } = router;\n    let res = await fetch(`http://localhost:4000/phones/${query.id}`);\n    let product = await res.json();\n    setProduct(product);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    if (!product) {\n      load();\n    }\n  });\n\n  if (error) {\n    return __jsx(Error, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    });\n  }\n\n  let CarouselComponents = __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 28\n    }\n  });\n\n  if (!loading) CarouselComponents = __jsx(Carousel, _extends({}, carouselProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), product.gallery.map(item => {\n    return __jsx(Carousel.Item, {\n      key: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      className: \"gallery-image\",\n      src: item,\n      alt: \"Gallery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    }));\n  }));\n  return __jsx(\"div\", {\n    className: styles.single_page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: styles.product_ceil,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, CarouselComponents)), __jsx(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, loading ? __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }) : __jsx(Description, {\n    product: product,\n    history: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })))));\n};\n\n_s(ProductContainer, \"cLdCpOPTgS3hgwADuHlZndndfFc=\", false, function () {\n  return [useRouter];\n});\n\n_c = ProductContainer;\n\nProductContainer.getInitialProps = async ({\n  req,\n  query\n}) => {\n  let {\n    id\n  } = query;\n  let serverProduct = null;\n\n  if (!req) {\n    return {\n      serverProduct\n    };\n  }\n\n  try {\n    const res = await fetch(`http://localhost:4000/phones/${id}`);\n    serverProduct = await res.json();\n  } catch (error) {\n    return {\n      serverError\n    };\n  }\n\n  return {\n    serverProduct\n  };\n}; // class ProductContainer extends Component {\n// static async getInitialProps({ req, query }) {\n//   let { id } = query\n//   let serverProduct = null\n//   if (!req) {\n//     return { serverProduct }\n//   }\n//   try {\n//     const res = await fetch(`http://localhost:4000/phones/${id}`)\n//     serverProduct = await res.json()\n//   } catch (error) {\n//     return { error }\n//   }\n//   return { serverProduct }\n// }\n// async load() {\n//   let { query } = this.props.router\n//   let res = await fetch(`http://localhost:4000/phones/${query.id}`)\n//   let product = await res.json()\n//   this.setState({ product, loading: false })\n// }\n//   state = {\n//     error: this.props.error,\n//     loading: !this.props.serverProduct,\n//     product: this.props.serverProduct,\n//   }\n//   componentDidMount() {\n// if (!this.state.product) {\n//   this.load()\n//   // this.setState({ phones: this.load() })\n// }\n//   }\n// carouselProps = {\n//   indicators: false,\n//   prevIcon: <img className={styles.carousel_arrows} src={prevArrow} />,\n//   nextIcon: <img className={styles.carousel_arrows} src={nextArrow} />,\n// }\n//   render() {\n// let { loading, error, product } = this.state\n// if (error) {\n//   return <Error />\n// }\n// let CarouselComponents = <Spinner />\n// if (!loading)\n//   CarouselComponents = (\n//     <Carousel {...this.carouselProps}>\n//       {product.gallery.map((item) => {\n//         return (\n//           <Carousel.Item key={item}>\n//             {<img className=\"gallery-image\" src={item} alt=\"Gallery\" />}\n//           </Carousel.Item>\n//         )\n//       })}\n//     </Carousel>\n//   )\n//     return (\n// <div className={styles.single_page}>\n//   <div className=\"container\">\n//     <div className=\"row\">\n//       <div className=\"col-md-6\">\n//         <div className={styles.product_ceil}>{CarouselComponents}</div>\n//       </div>\n//       <div className=\"col-md-6\">\n//         {loading ? (\n//           <Spinner />\n//         ) : (\n//           <Description product={product} history={this.props.history} />\n//         )}\n//       </div>\n//     </div>\n//   </div>\n// </div>\n//     )\n//   }\n// }\n\n\nexport default ProductContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductContainer\");","map":{"version":3,"sources":["D:/Programming languages/React/re-store/pages/shop/product/[id].js"],"names":["React","Component","useState","useEffect","Description","Carousel","Spinner","Error","useRouter","styles","prevArrow","nextArrow","carouselProps","indicators","prevIcon","carousel_arrows","nextIcon","ProductContainer","serverProduct","serverError","product","setProduct","loading","setLoading","error","setError","router","load","query","res","fetch","id","json","CarouselComponents","gallery","map","item","single_page","product_ceil","getInitialProps","req"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\r\nimport Description from '../../../routes/product/description'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Spinner from '../../../components/spinner'\r\nimport Error from '../../../components/error'\r\nimport { useRouter } from 'next/router'\r\nimport styles from '../../../routes/product/product.module.css'\r\nimport prevArrow from '../../../routes/product/prev.svg'\r\nimport nextArrow from '../../../routes/product/next.svg'\r\n\r\nconst carouselProps = {\r\n  indicators: false,\r\n  prevIcon: <img className={styles.carousel_arrows} src={prevArrow} />,\r\n  nextIcon: <img className={styles.carousel_arrows} src={nextArrow} />,\r\n}\r\n\r\nconst ProductContainer = ({ serverProduct, serverError }) => {\r\n  let [product, setProduct] = useState(serverProduct)\r\n  let [loading, setLoading] = useState(!serverProduct)\r\n  let [error, setError] = useState(serverError)\r\n\r\n  let router = useRouter()\r\n\r\n  async function load() {\r\n    let { query } = router\r\n    let res = await fetch(`http://localhost:4000/phones/${query.id}`)\r\n    let product = await res.json()\r\n\r\n    setProduct(product)\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!product) {\r\n      load()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return <Error />\r\n  }\r\n\r\n  let CarouselComponents = <Spinner />\r\n  if (!loading)\r\n    CarouselComponents = (\r\n      <Carousel {...carouselProps}>\r\n        {product.gallery.map((item) => {\r\n          return (\r\n            <Carousel.Item key={item}>\r\n              {<img className=\"gallery-image\" src={item} alt=\"Gallery\" />}\r\n            </Carousel.Item>\r\n          )\r\n        })}\r\n      </Carousel>\r\n    )\r\n\r\n  return (\r\n    <div className={styles.single_page}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className={styles.product_ceil}>{CarouselComponents}</div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            {loading ? (\r\n              <Spinner />\r\n            ) : (\r\n              <Description product={product} history={{}} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nProductContainer.getInitialProps = async ({ req, query }) => {\r\n  let { id } = query\r\n  let serverProduct = null\r\n  if (!req) {\r\n    return { serverProduct }\r\n  }\r\n  try {\r\n    const res = await fetch(`http://localhost:4000/phones/${id}`)\r\n    serverProduct = await res.json()\r\n  } catch (error) {\r\n    return { serverError }\r\n  }\r\n\r\n  return { serverProduct }\r\n}\r\n\r\n// class ProductContainer extends Component {\r\n// static async getInitialProps({ req, query }) {\r\n//   let { id } = query\r\n//   let serverProduct = null\r\n//   if (!req) {\r\n//     return { serverProduct }\r\n//   }\r\n\r\n//   try {\r\n//     const res = await fetch(`http://localhost:4000/phones/${id}`)\r\n//     serverProduct = await res.json()\r\n//   } catch (error) {\r\n//     return { error }\r\n//   }\r\n\r\n//   return { serverProduct }\r\n// }\r\n\r\n// async load() {\r\n//   let { query } = this.props.router\r\n//   let res = await fetch(`http://localhost:4000/phones/${query.id}`)\r\n//   let product = await res.json()\r\n\r\n//   this.setState({ product, loading: false })\r\n// }\r\n\r\n//   state = {\r\n//     error: this.props.error,\r\n//     loading: !this.props.serverProduct,\r\n//     product: this.props.serverProduct,\r\n//   }\r\n\r\n//   componentDidMount() {\r\n// if (!this.state.product) {\r\n//   this.load()\r\n//   // this.setState({ phones: this.load() })\r\n// }\r\n//   }\r\n\r\n// carouselProps = {\r\n//   indicators: false,\r\n//   prevIcon: <img className={styles.carousel_arrows} src={prevArrow} />,\r\n//   nextIcon: <img className={styles.carousel_arrows} src={nextArrow} />,\r\n// }\r\n\r\n//   render() {\r\n// let { loading, error, product } = this.state\r\n\r\n// if (error) {\r\n//   return <Error />\r\n// }\r\n\r\n// let CarouselComponents = <Spinner />\r\n// if (!loading)\r\n//   CarouselComponents = (\r\n//     <Carousel {...this.carouselProps}>\r\n//       {product.gallery.map((item) => {\r\n//         return (\r\n//           <Carousel.Item key={item}>\r\n//             {<img className=\"gallery-image\" src={item} alt=\"Gallery\" />}\r\n//           </Carousel.Item>\r\n//         )\r\n//       })}\r\n//     </Carousel>\r\n//   )\r\n\r\n//     return (\r\n// <div className={styles.single_page}>\r\n//   <div className=\"container\">\r\n//     <div className=\"row\">\r\n//       <div className=\"col-md-6\">\r\n//         <div className={styles.product_ceil}>{CarouselComponents}</div>\r\n//       </div>\r\n//       <div className=\"col-md-6\">\r\n//         {loading ? (\r\n//           <Spinner />\r\n//         ) : (\r\n//           <Description product={product} history={this.props.history} />\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default ProductContainer\r\n"]},"metadata":{},"sourceType":"module"}